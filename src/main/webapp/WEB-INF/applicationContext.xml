<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:property-placeholder location="classpath:/db.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--驱动-->
        <property name="driverClassName" value="${db.driver}"/>
        <!-- 数据库地址 -->
        <property name="url" value="${db.url}"/>
        <!-- 用户名 -->
        <property name="username" value="${db.user}"/>
        <!-- 密码 -->
        <property name="password" value="${db.password}"/>
        <!-- 最大连接池数量 -->
        <property name="maxActive" value="${db.maxActive}"/>
        <!-- 初始化物理连接个数 -->
        <property name="initialSize" value="${db.initialSize}"/>
        <!-- 最小连接池数量 -->
        <property name="minIdle" value="${db.minIdle}"/>
        <!-- 最大等待时间 -->
        <property name="maxWait" value="${db.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
        <!-- 检测连接是否有效的SQL -->
        <property name="validationQuery" value="${db.validationQuery}"/>
        <property name="testWhileIdle" value="${db.testWhileIdle}"/>
        <!-- 申请连接时是否执行validationQuery -->
        <property name="testOnBorrow" value="${db.testOnBorrow}"/>
        <!-- 归还连接时是否执行validationQuery -->
        <property name="testOnReturn" value="${db.testOnReturn}"/>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao.Mapper"/>
    </bean>


</beans>